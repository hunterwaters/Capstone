{"version":3,"sources":["components/User/Form/index.jsx","components/Home/index.jsx","components/Task/TaskForm/index.jsx","components/Task/index.jsx","components/App/index.jsx","serviceWorker.js","reducers/task.js","store.js","reducers/home.js","index.js"],"names":["UserForm","props","state","name","handleChangeField","bind","handleSubmit","nextProps","userToEdit","this","setState","ev","preventDefault","onSubmit","onEdit","axios","put","_id","then","res","data","post","key","event","target","value","className","onChange","type","placeholder","onClick","React","Component","connect","home","dispatch","Home","handleDelete","handleEdit","onLoad","id","onDelete","delete","user","setEdit","users","isLoading","map","to","TaskForm","description","Task","tasks","match","params","Promise","all","get","res1","res2","console","log","allTasks","task","element","withRouter","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","reducers","combineReducers","action","concat","filter","undefined","store","createStore","ReactDOM","render","history","createHistory","App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.84a37c83.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\n\nclass UserForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\"\n    };\n\n    this.handleChangeField = this.handleChangeField.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.userToEdit) {\n      this.setState({\n        name: nextProps.userToEdit.name\n      });\n    }\n  }\n\n  handleSubmit(ev) {\n    ev.preventDefault();\n    const { onSubmit, userToEdit, onEdit } = this.props;\n    const { name } = this.state;\n\n    if (!userToEdit) {\n      axios\n        .post(\"http://127.0.0.1:5000/api/v1/users\", {\n          name\n        })\n        .then(res => onSubmit(res.data))\n        .then(() =>\n          this.setState({\n            name: \"\"\n          })\n        );\n    } else {\n      return axios\n        .put(`http://127.0.0.1:5000/api/v1/users/${userToEdit._id}`, { name })\n        .then(res => onEdit(res.data))\n        .then(() => this.setState({ name: \"\" }));\n    }\n  }\n\n  handleChangeField(key, event) {\n    this.setState({\n      [key]: event.target.value\n    });\n  }\n\n  render() {\n    const { name } = this.state;\n\n    return (\n      <div className=\"row\">\n        <h5 className=\"center blue-text\">Add Users</h5>\n        <div className=\"input-field col s12\">\n          <input\n            onChange={ev => this.handleChangeField(\"name\", ev)}\n            value={name}\n            type=\"text\"\n            placeholder=\"User Name\"\n          />\n          <button\n            className=\"btn waves-effect waves-light\"\n            type=\"submit\"\n            name=\"action\"\n            onClick={this.handleSubmit}\n          >\n            Submit\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: data => dispatch({ type: \"SUBMIT_USER\", data }),\n  onEdit: data => dispatch({ type: 'EDIT_ARTICLE', data})\n});\n\nconst mapStateToProps = state => ({\n  userToEdit: state.home.userToEdit,\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserForm);\n","import React from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport UserForm from \"../User/Form\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  componentDidMount() {\n    const { onLoad } = this.props;\n    axios(\"http://127.0.0.1:5000/api/v1/users\").then(res => onLoad(res.data));\n  }\n\n  handleDelete(id) {\n    const { onDelete } = this.props;\n    return axios\n      .delete(`http://127.0.0.1/api/v1/users/${id}`)\n      .then(() => onDelete(id));\n  }\n\n  handleEdit(user) {\n    const { setEdit } = this.props;\n    setEdit(user);\n  }\n\n  render() {\n    const { users, isLoading } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <h1 className=\"center blue-text\"> Stay Organized.</h1>\n    \n          <UserForm />\n        </div>\n        <div className=\"row\">\n          <div className=\"col l12\">\n            {isLoading ? (\n              <div>Loading...</div>\n            ) : (\n              users.map(user => {\n                return (\n                  <ul className=\"collection\">\n                    <li className=\"collection-item\" key={user._id}>\n                      {user.name}\n                      <button\n                        onClick={() => this.handleEdit(user)}\n                        className=\"btn space\"\n                      >\n                        Edit\n                      </button>\n                      <button\n                        onClick={() => this.handleDelete(user._id)}\n                        className=\"btn space\"\n                      >\n                      &times;\n                      </button>\n                      <Link to={'/addTask/' + user._id}>\n                        <button className=\"btn space\">Add Task</button>\n                      </Link>\n                    </li>\n                  </ul>\n                );\n              })\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.home.users,\n  isLoading: false\n});\n\n// user actions\nconst mapDispatchToProps = dispatch => ({\n  onLoad: data => dispatch({ type: \"HOME_PAGE_LOADED\", data }),\n  onDelete: id => dispatch({ type: \"DELETE_USER\", id }),\n  setEdit: user => dispatch({ type: \"SET_EDIT\", user })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from 'react';\nimport axios from 'axios';\n\nclass TaskForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      description: '',\n      state: ''\n    }\n\n    this.handleChangeField = this.handleChangeField.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(ev){\n    const { id } = this.props\n    const { description, state } = this.state;\n    ev.preventDefault();\n    axios.post(`http://localhost:5000/api/v1/tasks/${id}`, {\n      description,\n      state,\n    }).then(() => {\n      this.setState({\n        description: '',\n        state: '',\n      })\n    })\n  }\n\n  handleChangeField(key, event) {\n    this.setState({\n      [key]: event.target.value,\n    });\n  }\n\n  render() {\n    const { description, state } = this.state;\n    return (\n     <div className=\"row\">\n        <div className=\"input-field col s12\">\n          <input\n            onChange={ev => this.handleChangeField(\"description\", ev)}\n            value={description}\n            type=\"text\"\n            placeholder=\"Description\"\n          />\n          <input\n            onChange={ev => this.handleChangeField(\"state\", ev)}\n            value={state}\n            type=\"text\"\n            placeholder=\"Please Input True if Done or False If TODO\"\n          />\n          <button\n            className=\"btn waves-effect waves-light\"\n            type=\"submit\"\n            name=\"action\"\n            onClick={this.handleSubmit}\n          >\n            Submit\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TaskForm;","import React from \"react\";\nimport axios from \"axios\";\nimport TaskForm from \"./TaskForm\";\n\nclass Task extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: \"\",\n      tasks: []\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    const promises = Promise.all([\n      axios.get(`http://127.0.0.1:5000/api/v1/users/${id}`),\n      axios.get(\"http://127.0.0.1:5000/api/v1/tasks\")\n    ]);\n\n    promises.then(([res1, res2]) => {\n      console.log(res2.data);\n      this.setState({\n        user: res1.data.user.name,\n        tasks: res2.data.allTasks\n      });\n    });\n  }\n\n  render() {\n    const { user, tasks } = this.state;\n    console.log(tasks);\n    const id = this.props.match.params.id;\n    if (user && tasks)\n      return (\n        <div className=\"container\">\n          <div className=\"row\">\n            <h1 className=\"center blue-text\">Add User Task</h1>\n          </div>\n          <h5 className=\"center blue-text\">Name:</h5>\n          <h6 className=\"center teal-text\">{user}</h6>\n          <TaskForm id={id} />\n          <div>\n            <h5 className=\"teal-text\">List of Tasks</h5>\n            {tasks.map(task => {\n              let element = '';\n              if(task.state === true)\n                element = 'done'\n              else  element = 'todo'\n              return (\n                <ul className=\"collections\" key={task._id}>\n                  <li className=\"collection-item\" >Description: {task.description}</li>\n                  <li className=\"collection-item\" >State: {element} </li>\n                </ul>\n              );\n            })}\n          </div>\n        </div>\n      );\n    else {\n      return (\n        <div className=\"center blue-text\">\n          <h3>Loading...</h3>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Task;\n","import React from \"react\";\nimport { withRouter, Switch, Route } from \"react-router-dom\";\n\nimport Home  from \"../Home/index\";\nimport Task from \"../Task/index\";\n\nconst App = props => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/addTask/:id\" component={Task} />\n    </Switch>\n  );\n};\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default (state = {tasks: []}, action) => {\n    switch (action.type) {\n      case \"TASKS_FETCHED\":\n        return {\n          ...state,\n          tasks: action.data.tasks\n        };\n        case 'SUBMIT_TASK':\n        return {\n          ...state,\n          tasks: ([action.data.tasks]).concat(state.tasks)\n        };\n      default:\n        return state;\n    }\n  };\n  ","import { createStore, combineReducers } from \"redux\";\n\nimport { home } from \"./reducers\";\nimport { task } from \"./reducers\"\n\nconst reducers = combineReducers({\n  home,\n  task\n});\n\nconst store = createStore(reducers);\n\nexport default store;\n","export default (state = {users: []}, action) => {\n    switch (action.type) {\n      case \"HOME_PAGE_LOADED\":\n        return {\n          ...state,\n          isLoading: false,\n          users: action.data.users\n        };\n      case 'SUBMIT_USER':\n        return {\n          ...state,\n          users: ([action.data.users]).concat(state.users)\n        };\n      case 'DELETE_USER':\n        return {\n          ...state,\n          users: state.users.filter(user => user._id !== action.id)\n        };\n      case 'SET_EDIT':\n        return {\n          ...state,\n          userToEdit: action.user\n        };\n      case 'EDIT_USER':\n        return {\n          ...state,\n          users: state.users.map(user => {\n            if(user._id === action.data.user._id){\n              return {\n                ...action.data.user\n              }\n            }\n            return user\n          }),\n          userToEdit: undefined,\n        }\n      default:\n        return state;\n    }\n  };\n  ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport createHistory from 'history/createBrowserHistory'\nimport { Provider } from 'react-redux';\nimport { App } from \"./components\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Route, Switch, Router } from \"react-router-dom\";\nimport store from './store';\n\nReactDOM.render(\n  <Router history={createHistory()}>\n    <Provider store={store}>\n    <Switch>\n      <Route path=\"/\" component={App} />\n    </Switch>\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}